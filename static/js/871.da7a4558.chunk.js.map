{"version":3,"file":"static/js/871.da7a4558.chunk.js","mappings":"+SACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAER,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,qCACSC,EADT,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBN,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACkCK,EADlC,oDADlB,cACCH,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,oBACGP,EADH,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,uFACkBR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACWP,EADX,2BADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,uFACkBR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACWP,EADX,2BADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kE,yGCMP,UAlCe,WACb,OAA4BO,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEKP,EAAAA,EAAAA,IAAeI,GAFpB,OAEVI,EAFU,OAGhBL,EAAUK,EAAOC,SAHD,gDAKhBC,QAAQC,IAAR,MALgB,yDAAH,qDAQjBJ,GACD,GAAE,CAACH,IACCF,GAA4B,IAAlBA,EAAOU,QAGpB,iCACE,mBACA,wBACGV,EAAOW,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,wBACE,uBAAID,OAGN,uBAAIC,MALGjB,EADC,UALT,oEAiBV,C","sources":["api/api.js","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst APIKEY = 'ca6a18deac59aabbceac0a2518e15600';\n\nexport async function getMoviesTrending() {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${APIKEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMoviesQuery(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${APIKEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return response.data;\n}\n\nexport async function getMovieReview(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return response.data;\n}\n","import { getMovieReview } from 'api/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Review = () => {\n  const [review, setReview] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReview = async () => {\n      try {\n        const result = await getMovieReview(movieId);\n        setReview(result.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchReview();\n  }, [movieId]);\n  if (!review || review.length === 0)\n    return <p>We don't have any reviews for this movie.</p>;\n  return (\n    <>\n      <hr />\n      <ul>\n        {review.map(({ id, author, content }) => (\n          <li key={id}>\n            <p>\n              <b>{author}</b>\n            </p>\n\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default Review;\n"],"names":["axios","APIKEY","getMoviesTrending","response","data","getMoviesQuery","query","getMovieDetails","id","getMovieCast","getMovieReview","useState","review","setReview","movieId","useParams","useEffect","fetchReview","result","results","console","log","length","map","author","content"],"sourceRoot":""}