{"version":3,"file":"static/js/400.de70dca1.chunk.js","mappings":"+SACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAER,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,qCACSC,EADT,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBN,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACkCK,EADlC,oDADlB,cACCH,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,oBACGP,EADH,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,uFACkBR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACWP,EADX,2BADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,uFACkBR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACWP,EADX,2BADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kE,8IC9BMO,EAAe,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC7B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAMA,OACE,kBAAMC,SANa,SAAAC,GACnBA,EAAEC,iBACFN,EAAU,CAAEO,OAAQL,IACpBC,EAAS,GACV,EAEC,WACE,kBACEK,KAAK,OACLC,KAAK,SACLC,YAAY,gBACZC,MAAOT,EACPU,SAAU,SAAAP,GACRF,EAASE,EAAEQ,OAAOF,MACnB,KAGH,mBAAQH,KAAK,SAAb,sBAGL,ECaD,EAhCc,WACZ,OAA4BP,EAAAA,EAAAA,UAAS,IAArC,eAAOM,EAAP,KAAeO,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMvB,EAAQsB,EAAaE,IAAI,UAa/B,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,uFACZ1B,EADY,2EAGMD,EAAAA,EAAAA,IAAeC,GAHrB,OAGT2B,EAHS,OAIfP,EAAUO,EAAOC,SAJF,gDAMfC,QAAQC,IAAR,MANe,yDAAH,qDAShBJ,GACD,GAAE,CAAC1B,KAEF,6BACE,SAACK,EAAD,CAAcC,UAAWiB,IACxBV,EAAOkB,OAAS,GACflB,EAAOmB,KAAI,YAA6B,IAA1B9B,EAAyB,EAAzBA,GAAI+B,EAAqB,EAArBA,eAChB,OACE,yBACE,yBACE,SAAC,KAAD,CAASC,GAAE,UAAKhC,GAAhB,SAAuB+B,OAFlB/B,EAMZ,MAGR,C","sources":["api/api.js","components/SearchMovie/SearchMovie.jsx","pages/Movies/Movie.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst APIKEY = 'ca6a18deac59aabbceac0a2518e15600';\n\nexport async function getMoviesTrending() {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${APIKEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMoviesQuery(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${APIKEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return response.data;\n}\n\nexport async function getMovieReview(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return response.data;\n}\n","import { useState } from 'react';\n\nexport const SearchMovies = ({ setSearch }) => {\n  const [input, setInput] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearch({ movies: input });\n    setInput('');\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Search Movies\"\n        value={input}\n        onChange={e => {\n          setInput(e.target.value);\n        }}\n      />\n\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { getMoviesQuery } from 'api/api';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, NavLink } from 'react-router-dom';\nimport { SearchMovies } from 'components/SearchMovie/SearchMovie';\n\nconst Movie = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('movies');\n  useEffect(() => {\n    const fetchMovie = async () => {\n      if (!query) return;\n      try {\n        const result = await getMoviesQuery(query);\n        setMovies(result.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovie();\n  }, [query]);\n  return (\n    <main>\n      <SearchMovies setSearch={setSearchParams} />\n      {movies.length > 0 &&\n        movies.map(({ id, original_title }) => {\n          return (\n            <ul key={id}>\n              <li>\n                <NavLink to={`${id}`}>{original_title}</NavLink>\n              </li>\n            </ul>\n          );\n        })}\n    </main>\n  );\n};\nexport default Movie;\n"],"names":["axios","APIKEY","getMoviesTrending","response","data","getMoviesQuery","query","getMovieDetails","id","getMovieCast","getMovieReview","SearchMovies","setSearch","useState","input","setInput","onSubmit","e","preventDefault","movies","type","name","placeholder","value","onChange","target","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovie","result","results","console","log","length","map","original_title","to"],"sourceRoot":""}