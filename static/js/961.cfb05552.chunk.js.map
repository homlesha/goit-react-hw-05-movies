{"version":3,"file":"static/js/961.cfb05552.chunk.js","mappings":"+SACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAER,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,qCACSC,EADT,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBN,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACkCK,EADlC,oDADlB,cACCH,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,oBACGP,EADH,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,uFACkBR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACWP,EADX,2BADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,uFACkBR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACWP,EADX,2BADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kE,0HCyCP,UArEqB,WACnB,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,QAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,IAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEIV,EAAAA,EAAAA,IAAgBI,GAFpB,OAEXO,EAFW,OAGjBH,EAAWG,GAHM,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBH,GACD,GAAE,CAACN,KACCG,EACH,OAAO,KAGT,IAAQO,EACNP,EADMO,YAAaC,EACnBR,EADmBQ,MAAOC,EAC1BT,EAD0BS,OAAQC,EAClCV,EADkCU,aAAcC,EAChDX,EADgDW,SAAUC,EAC1DZ,EAD0DY,aAE5D,GAAKH,EAAL,CAGA,IAIMI,EAAO,IAAIC,KAAKF,GAEtB,OACE,6BACE,gBAAKG,MAAO,CAAEC,WAAY,QAA1B,UACE,SAAC,KAAD,CAASC,GAAI,IAAb,wBAEF,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,IAAG,yCAAoCX,GACvCY,IAAKX,KAEP,4BACE,UAAC,KAAD,WACGA,EADH,IACWK,EAAKO,cADhB,QAGA,UAAC,KAAD,2BAAmC,GAAfV,GAAmBW,UAAvC,QACA,SAAC,KAAD,wBACA,SAAC,KAAD,UAAOV,KACP,SAAC,KAAD,sBACA,SAAC,KAAD,UAxBU,SAAAF,GAChB,OAAOA,EAAOa,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,IAC3C,CAsBcC,CAAUjB,YAGrB,SAAC,KAAD,sCACA,2BACE,yBACE,SAAC,KAAD,CAASQ,GAAG,OAAZ,qBAIF,yBACE,SAAC,KAAD,CAASA,GAAG,SAAZ,2BAKJ,SAAC,EAAAU,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QA1CL,CA8CF,C,6JCtEYC,EAAQC,EAAAA,GAAAA,IAAH,gEAILC,EAAQD,EAAAA,GAAAA,GAAH,+CAGLE,EAAMF,EAAAA,GAAAA,IAAH,8IAOHG,EAAOH,EAAAA,GAAAA,EAAH,8D","sources":["api/api.js","pages/MovieDetails/MovieDetails.jsx","pages/MovieDetails/MovieDetails.styled.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst APIKEY = 'ca6a18deac59aabbceac0a2518e15600';\n\nexport async function getMoviesTrending() {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${APIKEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMoviesQuery(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${APIKEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return response.data;\n}\n\nexport async function getMovieReview(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return response.data;\n}\n","import { getMovieDetails } from 'api/api';\nimport { useEffect, useState, Suspense } from 'react';\nimport { useParams, NavLink, Outlet } from 'react-router-dom';\nimport { Image, Box, Title, Text } from './MovieDetails.styled';\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState('null');\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        const result = await getMovieDetails(movieId);\n        setDetails(result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchDetails();\n  }, [movieId]);\n  if (!details) {\n    return null;\n  }\n\n  const { poster_path, title, genres, vote_average, overview, release_date } =\n    details;\n  if (!genres) {\n    return;\n  }\n  const getGenres = genres => {\n    return genres.map(genr => genr.name).join(',');\n  };\n\n  const date = new Date(release_date);\n\n  return (\n    <main>\n      <div style={{ marginLeft: '25px' }}>\n        <NavLink to= '/'>Go back</NavLink>\n      </div>\n      <Box>\n        <Image\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n        />\n        <div>\n          <Title>\n            {title}({date.getFullYear()})\n          </Title>\n          <Text>User Score: {(vote_average * 10).toFixed()}%</Text>\n          <Title>Overview</Title>\n          <Text>{overview}</Text>\n          <Title>Genres</Title>\n          <Text>{getGenres(genres)}</Text>\n        </div>\n      </Box>\n      <Text>Additional information</Text>\n      <ul>\n        <li>\n          <NavLink to=\"cast\">\n            Cast\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"review\">\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 250px;\n  margin-right: 20px;\n`;\nexport const Title = styled.h2`\n  margin-right: 20px;\n`;\nexport const Box = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  margin: 10px 0;\n  padding-bottom: 10px;\n  border-bottom: 1px solid grey;\n`;\nexport const Text = styled.p`\n  font-size: 16px;\n  margin: 15px 0;\n`;\n"],"names":["axios","APIKEY","getMoviesTrending","response","data","getMoviesQuery","query","getMovieDetails","id","getMovieCast","getMovieReview","movieId","useParams","useState","details","setDetails","useEffect","fetchDetails","result","console","log","poster_path","title","genres","vote_average","overview","release_date","date","Date","style","marginLeft","to","src","alt","getFullYear","toFixed","map","genr","name","join","getGenres","Suspense","fallback","Image","styled","Title","Box","Text"],"sourceRoot":""}